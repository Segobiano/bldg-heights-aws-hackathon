AWSTemplateFormatVersion: 2010-09-09

Description: >-
  Urban Insitute Workflow Security Groups

Parameters:

  WFName:
    Type: String


  Environment:
    Type: String
    AllowedValues: [dev, test, prod]

  CFTemplateS3Path:
    Type: String

  VpcId:
    Description: "ID of the VPC to build Security Groups in"
    Type: AWS::EC2::VPC::Id

  VpcCidr:
    Description: "The IP CIDR of your source IP Addres"
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "This must be a valid CIDR range in form of x.x.x.x/x"


Resources:
  DataJobFargateTaskSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Sub "sg.${WFName}.${Environment}.datajob.${AWS::Region}"
      GroupDescription: Urban Institute Data Job Security Group
      VpcId: !Ref VpcId

  DataLoaderEC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Sub "sg.${WFName}.${Environment}.dataloaderec2.${AWS::Region}"
      GroupDescription: Urban Institute Data Loader EC2 Security Group
      VpcId: !Ref VpcId

  DataLoaderServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Sub "sg.${WFName}.${Environment}.dataloaderservice.${AWS::Region}"
      GroupDescription: Urban Institute Data Loader HTTP Service Security Group
      VpcId: !Ref VpcId

  RDSPostgresSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Sub "sg.${WFName}.${Environment}.rdspostgres.${AWS::Region}"
      GroupDescription: Urban Institute Data Loader HTTP Service Security Group
      SecurityGroupIngress:
        - ToPort: 5432
          IpProtocol: tcp
          CidrIp: !Ref VpcCidr
          FromPort: 5432
      VpcId: !Ref VpcId


Outputs:
  DataJobFargateTaskSecurityGroup:
    Value: !GetAtt DataJobFargateTaskSecurityGroup.GroupId
    Export:
      Name: !Sub "sg-${WFName}-${Environment}-datajob-${AWS::Region}"

  DataLoaderEC2SecurityGroup:
    Value: !GetAtt DataLoaderEC2SecurityGroup.GroupId
    Export:
      Name: !Sub "sg-${WFName}-${Environment}-dataloaderec2-${AWS::Region}"

  DataLoaderServerSecurityGroup:
    Value: !GetAtt DataLoaderServerSecurityGroup.GroupId
    Export:
      Name: !Sub "sg-${WFName}-${Environment}-dataloaderservice-${AWS::Region}"

  RDSDatabaseSecurityGroup:
    Value: !GetAtt DataLoaderServerSecurityGroup.GroupId
    Export:
      Name: !Sub "sg-${WFName}-${Environment}-rdspostgres-${AWS::Region}"
